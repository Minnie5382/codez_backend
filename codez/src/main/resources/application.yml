spring:
  datasource:
    # H2
    # url: jdbc:h2:tcp://localhost/~/jpashop
    # username: sa
    # password:
    # driver-class-name: org.h2.Driver

#    # local postgres
#    url: jdbc:postgresql://localhost:5432/postgres
#    username: minn
#    password:
#    driver-class-name: org.postgresql.Driver

   # docker postgres
   url: jdbc:postgresql://db:5432/postgres
   username: postgres
   password: n1234


#  redis:
#    host: localhost
#    port: 6379
#    username:
#    password:

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.orm.jdbc.bind: trace

server:
  port: 3001
  servlet:
    session:
      tracking-modes: cookie
      cookie:
        same-site: none
        secure: true
        http-only: false
    multipart:
      max-file-size: 3MB
      max-request-size: 3MB

cloud:
  aws:
    s3:
      bucket: codez-bucket
    region:
      static: ap-northeast-2
      auto: false
    stack:
      auto: false
    credentials:
      accessKey: ${env:/Users/minn/Desktop/goorm/kram_test/codez_backend/.env/AWS_ACCESS_KEY}
      secretKey: ${env:/Users/minn/Desktop/goorm/kram_test/codez_backend/.env/AWS_SECRET_ACCESS_KEY}

springdoc:
  swagger-ui:
    path: /api-test  # swagger-ui 접근 경로에 대한 별칭, 해당 주소로 접속해도 http://localhost:8080/swagger-ui/index.html로 리다이렉션 됨.

    groups-order: DESC # path, query, body, response 순으로 출력

    operations-sorter: method  # delete - get - patch - post - put 순으로 정렬, alpha를 사용하면 알파벳 순으로 정렬 가능

#  paths-to-match:
#    - /api/** # swagger-ui에 표시할 api의 엔드포인트 패턴
